{
	"info": {
		"_postman_id": "122545de-d64e-4cdf-9227-c4cc020b768b",
		"name": "Pruebas Proyecto 0",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" alt=\"\" height=\"1530\" width=\"2162\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25534557",
		"_collection_link": "https://grey-comet-628056.postman.co/workspace/Proyecto-0-Cloud~7c8e40a1-a209-4ab8-ba48-50a220eadd9c/collection/25534557-122545de-d64e-4cdf-9227-c4cc020b768b?action=share&source=collection_link&creator=25534557"
	},
	"item": [
		{
			"name": "Usuario",
			"item": [
				{
					"name": "Crear Usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function () {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"Usuario creado exitosamente\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre_usuario\": \"TestUser\",\r\n    \"contrasenia\": \"Testpassword\",\r\n    \"imagen_perfil\": \"https://i.pinimg.com/736x/a7/c3/61/a7c3611972e34f1c778f95c8fe393b4e.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/usuarios",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": [
						{
							"name": "Crear Usuario",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre_usuario\": \"TestUser\",\r\n    \"contrasenia\": \"Testpassword\",\r\n    \"imagen_perfil\": \"https://i.pinimg.com/736x/a7/c3/61/a7c3611972e34f1c778f95c8fe393b4e.jpg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/usuarios",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"Usuario creado exitosamente\"\n}"
						}
					]
				},
				{
					"name": "Crear Usuario Solicitud Incompleta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function () {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"Faltan datos obligatorios\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre_usuario\": \"TestUser\",\r\n    \"imagen_perfil\": \"https://i.pinimg.com/736x/a7/c3/61/a7c3611972e34f1c778f95c8fe393b4e.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/usuarios",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": [
						{
							"name": "Crear Usuario Solicitud Incompleta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre_usuario\": \"testuser\",\r\n    \"imagen_perfil\": \"https://example.com/image.jpg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/usuarios",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"mensaje\": \"Faltan datos obligatorios\"\r\n}"
						}
					]
				},
				{
					"name": "Crear Usuario Con Usuario Vacio",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function () {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"El nombre de usuario no puede estar vacÃ­o\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre_usuario\": \"\",\r\n    \"contrasenia\": \"Testpassword\",\r\n    \"imagen_perfil\": \"https://i.pinimg.com/736x/a7/c3/61/a7c3611972e34f1c778f95c8fe393b4e.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/usuarios",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": [
						{
							"name": "Crear Usuario Con Usuario Vacio",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre_usuario\": \"\",\r\n    \"contrasenia\": \"Testpassword\",\r\n    \"imagen_perfil\": \"https://i.pinimg.com/736x/a7/c3/61/a7c3611972e34f1c778f95c8fe393b4e.jpg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/usuarios",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"El nombre de usuario no puede estar vacÃ­o\"\n}"
						}
					]
				},
				{
					"name": "Crear Usuario Con ContraseÃ±a Vacia",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function () {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"La contraseÃ±a no puede estar vacÃ­a\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre_usuario\": \"TestUser\",\r\n    \"contrasenia\": \"\",\r\n    \"imagen_perfil\": \"https://i.pinimg.com/736x/a7/c3/61/a7c3611972e34f1c778f95c8fe393b4e.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/usuarios",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": [
						{
							"name": "Crear Usuario Con ContraseÃ±a Vacia",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre_usuario\": \"TestUser\",\r\n    \"contrasenia\": \"\",\r\n    \"imagen_perfil\": \"https://i.pinimg.com/736x/a7/c3/61/a7c3611972e34f1c778f95c8fe393b4e.jpg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/usuarios",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"La contraseÃ±a no puede estar vacÃ­a\"\n}"
						}
					]
				},
				{
					"name": "Crear Usuario Ya Existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function () {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"El usuario ya existe\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre_usuario\": \"TestUser\",\r\n    \"contrasenia\": \"Testpassword\",\r\n    \"imagen_perfil\": \"https://i.pinimg.com/736x/a7/c3/61/a7c3611972e34f1c778f95c8fe393b4e.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/usuarios",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": [
						{
							"name": "Crear Usuario Solicitud Incompleta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre_usuario\": \"testuser\",\r\n    \"contrasenia\": \"testpassword\",\r\n    \"imagen_perfil\": \"https://example.com/image.jpg\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/usuarios",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"usuarios"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"mensaje\": \"El usuario ya existe\"\r\n}"
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Respuesta contiene access_token\", function () {\r",
									"    const jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"access_token\");\r",
									"    pm.expect(jsonData.access_token).to.be.a(\"string\").and.not.empty;\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"if (jsonData.access_token) {\r",
									"    pm.environment.set(\"access_token\", jsonData.access_token);\r",
									"}\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre_usuario\": \"TestUser\",\r\n    \"contrasenia\": \"Testpassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/usuarios/iniciar-sesion",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios",
								"iniciar-sesion"
							]
						}
					},
					"response": [
						{
							"name": "Login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre_usuario\": \"testuser\",\r\n    \"contrasenia\": \"testpassword\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/usuarios/iniciar-sesion",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"usuarios",
										"iniciar-sesion"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Login Solicitud Incompleta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function () {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"Faltan datos obligatorios\")\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre_usuario\": \"testuser\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/usuarios/iniciar-sesion",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios",
								"iniciar-sesion"
							]
						}
					},
					"response": [
						{
							"name": "Login Solicitud Incompleta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre_usuario\": \"testuser\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/usuarios/iniciar-sesion",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"usuarios",
										"iniciar-sesion"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"mensaje\": \"Faltan datos obligatorios\"\r\n}"
						}
					]
				},
				{
					"name": "Login Credenciales Incorrectas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function () {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"Credenciales invÃ¡lidas\")\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre_usuario\": \"testuser\",\r\n    \"contrasenia\": \"no es la correcta\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/usuarios/iniciar-sesion",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios",
								"iniciar-sesion"
							]
						}
					},
					"response": [
						{
							"name": "Login Credenciales Incorrectas",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre_usuario\": \"testuser\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/usuarios/iniciar-sesion",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"usuarios",
										"iniciar-sesion"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"mensaje\": \"Credenciales invÃ¡lidas\"\r\n}"
						}
					]
				},
				{
					"name": "Get Usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Contenido Requerido\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.expect(jsonData).to.have.property(\"nombre_usuario\")\r",
									"    pm.expect(jsonData).to.have.property(\"imagen_perfil\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/usuarios/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios",
								"me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Categorias",
			"item": [
				{
					"name": "Crear Categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"CategorÃ­a creada exitosamente\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Universidad\",\r\n    \"descripcion\": \"Todos los trabajos universitarios o relacionados con la universidad\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/categorias",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categorias"
							]
						}
					},
					"response": [
						{
							"name": "Crear Categoria",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Universidad\",\r\n    \"descripcion\": \"Todos los trabajos universitarios o relacionados con la universidad\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/categorias",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categorias"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"mensaje\":\"CategorÃ­a creada exitosamente\"\r\n}"
						}
					]
				},
				{
					"name": "Crear Categoria 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"CategorÃ­a creada exitosamente\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Hogar\",\r\n    \"descripcion\": \"Todos los trabajos relacionados con el mantenimiento de la casa\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/categorias",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categorias"
							]
						}
					},
					"response": [
						{
							"name": "Crear Categoria 2",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Hogar\",\r\n    \"descripcion\": \"Todos los trabajos relacionados con el mantenimiento de la casa\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/categorias",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categorias"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"mensaje\":\"CategorÃ­a creada exitosamente\"\r\n}"
						}
					]
				},
				{
					"name": "Crear Categoria 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"CategorÃ­a creada exitosamente\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Ejercicio\",\r\n    \"descripcion\": \"Todos los trabajos relacionados con entrenamiento\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/categorias",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categorias"
							]
						}
					},
					"response": [
						{
							"name": "Crear Categoria 3",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Ejercicio\",\r\n    \"descripcion\": \"Todos los trabajos relacionados con entrenamiento\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/categorias",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categorias"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"mensaje\":\"CategorÃ­a creada exitosamente\"\r\n}"
						}
					]
				},
				{
					"name": "Crear Categoria Solocitud Incompleta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"Falta el campo obligatorio: nombre\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"descripcion\": \"Todos los trabajos universitarios o relacionados con la universidad\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/categorias",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categorias"
							]
						}
					},
					"response": [
						{
							"name": "Crear Categoria Solocitud Incompleta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"descripcion\": \"Todos los trabajos universitarios o relacionados con la universidad\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/categorias",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categorias"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"mensaje\":\"Falta el campo obligatorio: nombre\"\r\n}"
						}
					]
				},
				{
					"name": "Crear Categoria Existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 409\", function () {\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"La categorÃ­a ya existe\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"nombre\": \"Universidad\",\r\n    \"descripcion\": \"Todos los trabajos universitarios o relacionados con la universidad\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/categorias",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categorias"
							]
						}
					},
					"response": [
						{
							"name": "Crear Categoria Existente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Universidad\",\r\n    \"descripcion\": \"Todos los trabajos universitarios o relacionados con la universidad\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/categorias",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categorias"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"mensaje\":\"La categorÃ­a ya existe\"\r\n}"
						}
					]
				},
				{
					"name": "Obtener Categorias",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonResponse = pm.response.json();\r",
									"pm.test(\"Response es una lista\", function () {\r",
									"    pm.expect(jsonResponse).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/categorias",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categorias"
							]
						}
					},
					"response": [
						{
							"name": "Obtener Categoria",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Universidad\",\r\n    \"descripcion\": \"Todos los trabajos universitarios o relacionados con la universidad\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/categorias",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categorias"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "[\r\n    {\r\n        \"descripcion\": \"Todos los trabajos universitarios o relacionados con la universidad\",\r\n        \"id\": 1,\r\n        \"nombre\": \"Universidad\"\r\n    },\r\n    {\r\n        \"descripcion\": \"Todos los trabajos relacionados con el mantenimiento de la casa\",\r\n        \"id\": 2,\r\n        \"nombre\": \"Hogar\"\r\n    }\r\n]"
						}
					]
				},
				{
					"name": "Eliminar Categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"CategorÃ­a eliminada exitosamente\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/categorias/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categorias",
								"1"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar Categoria",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Universidad\",\r\n    \"descripcion\": \"Todos los trabajos universitarios o relacionados con la universidad\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/categorias",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categorias"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"mensaje\": \"CategorÃ­a eliminada exitosamente\"\r\n}"
						}
					]
				},
				{
					"name": "Eliminar Categoria No existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"CategorÃ­a no encontrada\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/categorias/10000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categorias",
								"10000"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar Categoria No existente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Universidad\",\r\n    \"descripcion\": \"Todos los trabajos universitarios o relacionados con la universidad\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/categorias",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categorias"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"mensaje\": \"CategorÃ­a no encontrada\"\r\n}"
						}
					]
				},
				{
					"name": "Crear Tarea Con Categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"Tarea creada exitosamente\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Levantar Peso Pesado\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-03-31T01:00:00Z\",\r\n    \"categoria_id\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas"
							]
						}
					},
					"response": [
						{
							"name": "Crear Tarea Con Categoria",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"Tarea creada exitosamente\"\n}"
						}
					]
				},
				{
					"name": "Eliminar Categoria Con Tarea Asociada",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 404\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"No se puede eliminar la categorÃ­a porque tiene tareas asociadas\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/categorias/3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"categorias",
								"3"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar Categoria Con Tarea Asociada",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"nombre\": \"Universidad\",\r\n    \"descripcion\": \"Todos los trabajos universitarios o relacionados con la universidad\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/categorias",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"categorias"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\r\n    \"mensaje\": \"No se puede eliminar la categorÃ­a porque tiene tareas asociadas\"\r\n}"
						}
					]
				}
			]
		},
		{
			"name": "Tarea",
			"item": [
				{
					"name": "Crear Tarea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"Tarea creada exitosamente\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-03-31T01:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas"
							]
						}
					},
					"response": [
						{
							"name": "Crear Tarea",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"Tarea creada exitosamente\"\n}"
						}
					]
				},
				{
					"name": "Crear Tarea Con Informacion Incompleta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"Faltan datos obligatorios\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T01:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas"
							]
						}
					},
					"response": [
						{
							"name": "Crear Tarea Con Informacion Incompleta",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"Faltan datos obligatorios\"\n}"
						}
					]
				},
				{
					"name": "Crear Tarea Formato De Fecha Erroneo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 201\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"Formato de fecha no vÃ¡lido\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-011-31T01:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas"
							]
						}
					},
					"response": [
						{
							"name": "Crear Tarea",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"Tarea creada exitosamente\"\n}"
						}
					]
				},
				{
					"name": "Crear Tarea Sin Usuario Existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"Usuario no encontrado\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Crear Cuenta\",\r\n    \"usuario_id\": 1000,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T01:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas"
							]
						}
					},
					"response": [
						{
							"name": "Crear Tarea Sin Usuario Existente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"Usuario no encontrado\"\n}"
						}
					]
				},
				{
					"name": "Crear Tarea Fecha Tentativa Vieja",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 404\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"La fecha tentativa no puede ser anterior a la fecha actual\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Crear Cuenta\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2024-01-31T01:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas"
							]
						}
					},
					"response": [
						{
							"name": "Crear Tarea Fecha Tentativa Vieja",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"La fecha tentativa no puede ser anterior a la fecha actual\"\n}"
						}
					]
				},
				{
					"name": "Crear Tarea Categoria Inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"CategorÃ­a no encontrada\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-03-31T01:00:00Z\",\r\n    \"categoria_id\": 1000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas"
							]
						}
					},
					"response": [
						{
							"name": "Crear Tarea",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"Tarea creada exitosamente\"\n}"
						}
					]
				},
				{
					"name": "Actualizar Tarea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"mensaje\", \"Tarea actualizada exitosamente\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Tarea actualizada\",\r\n    \"estado\": \"En Proceso\",\r\n    \"fecha_tentativa_finalizacion\": \"2026-02-01T01:00:00Z\",\r\n    \"categoria_id\": 2\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas",
								"2"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar Tarea",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"Tarea actualizada exitosamente\"\n}\n"
						}
					]
				},
				{
					"name": "Actualizar Tarea No Existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"mensaje\", \"Tarea no encontrada\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Tarea actualizada\",\r\n    \"estado\": \"En Proceso\",\r\n    \"fecha_tentativa_finalizacion\": \"2026-02-01T01:00:00Z\",\r\n    \"categoria_id\": 1 \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas/1000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas",
								"1000"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar Tarea No Existente",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"Tarea no encontrada\"\n}\n"
						}
					]
				},
				{
					"name": "Actualizar Tarea Estado No Valido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"mensaje\", \"Estado no vÃ¡lido\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Tarea actualizada\",\r\n    \"estado\": \"En La Nube\",\r\n    \"fecha_tentativa_finalizacion\": \"2026-02-01T01:00:00Z\",\r\n    \"categoria_id\": 2\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas",
								"2"
							]
						}
					},
					"response": [
						{
							"name": "Actualizar Tarea Estado No Valido",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"Tarea actualizada exitosamente\"\n}\n"
						}
					]
				},
				{
					"name": "Actualizar Tarea Fecha Tentativa Vieja",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"La fecha tentativa no puede ser anterior a la fecha de creaciÃ³n\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Tarea actualizada\",\r\n    \"estado\": \"En Proceso\",\r\n    \"fecha_tentativa_finalizacion\": \"2024-02-01T01:00:00Z\",\r\n    \"categoria_id\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas",
								"2"
							]
						}
					},
					"response": [
						{
							"name": "Crear Tarea Fecha Tentativa Vieja",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"La fecha tentativa no puede ser anterior a la fecha actual\"\n}"
						}
					]
				},
				{
					"name": "Actualizar Tarea Con Categoria Inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"CategorÃ­a con ID 1000 no encontrada\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Tarea actualizada\",\r\n    \"estado\": \"En Proceso\",\r\n    \"fecha_tentativa_finalizacion\": \"2026-02-01T01:00:00Z\",\r\n    \"categoria_id\": 1000\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas",
								"2"
							]
						}
					},
					"response": [
						{
							"name": "Crear Tarea Fecha Tentativa Vieja",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"La fecha tentativa no puede ser anterior a la fecha actual\"\n}"
						}
					]
				},
				{
					"name": "Actualizar Tarea Con Categoria Invalida",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"ID de categorÃ­a no vÃ¡lido\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Tarea actualizada\",\r\n    \"estado\": \"En Proceso\",\r\n    \"fecha_tentativa_finalizacion\": \"2026-02-01T01:00:00Z\",\r\n    \"categoria_id\": \"a\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas",
								"2"
							]
						}
					},
					"response": [
						{
							"name": "Crear Tarea Fecha Tentativa Vieja",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"La fecha tentativa no puede ser anterior a la fecha actual\"\n}"
						}
					]
				},
				{
					"name": "Obtener Tarea Por Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Contenido Requerido\", function () {\r",
									"    pm.expect(jsonData).to.have.property(\"id\");\r",
									"    pm.expect(jsonData).to.have.property(\"texto_area\");\r",
									"    pm.expect(jsonData).to.have.property(\"fecha_creacion\");\r",
									"    pm.expect(jsonData).to.have.property(\"fecha_tentativa_finalizacion\");\r",
									"    pm.expect(jsonData).to.have.property(\"estado\");\r",
									"    pm.expect(jsonData).to.have.property(\"usuario_id\");\r",
									"    pm.expect(jsonData).to.have.property(\"categoria_id\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas/2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas",
								"2"
							]
						}
					},
					"response": [
						{
							"name": "Obtener Tarea Por Id",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"categoria_id\": null,\n    \"estado\": \"En Proceso\",\n    \"fecha_creacion\": \"2025-01-26T01:03:25.977054\",\n    \"fecha_tentativa_finalizacion\": \"2025-02-01T15:00:00\",\n    \"id\": 1,\n    \"texto_area\": \"Tarea actualizada\",\n    \"usuario_id\": 1\n}"
						}
					]
				},
				{
					"name": "Obtener Tarea Por Id Invalido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"Tarea no encontrada\")\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas/1000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas",
								"1000"
							]
						}
					},
					"response": [
						{
							"name": "Obtener Tarea Por Id Invalido",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas/1",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas",
										"1"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"Tarea no encontrada\"\n}"
						}
					]
				},
				{
					"name": "Obtener Tarea Por Usuario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"const jsonResponse = pm.response.json();\r",
									"pm.test(\"Response es una lista\", function () {\r",
									"    pm.expect(jsonResponse).to.be.an('array');\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Tarea actualizada\",\r\n    \"estado\": \"En Proceso\",\r\n    \"fecha_tentativa_finalizacion\": \"2025-02-01T15:00:00Z\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/usuarios/1/tareas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios",
								"1",
								"tareas"
							]
						}
					},
					"response": [
						{
							"name": "Crear Tarea",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Obtener Tarea Por Usuario No Existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"Usuario no encontrado\")\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Tarea actualizada\",\r\n    \"estado\": \"En Proceso\",\r\n    \"fecha_tentativa_finalizacion\": \"2025-02-01T15:00:00Z\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/usuarios/1000/tareas",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios",
								"1000",
								"tareas"
							]
						}
					},
					"response": [
						{
							"name": "Crear Tarea",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"Usuario no encontrado\"\n}"
						}
					]
				},
				{
					"name": "Eliminar Tarea",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"Tarea eliminada exitosamente\")\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Tarea actualizada\",\r\n    \"estado\": \"En Proceso\",\r\n    \"fecha_tentativa_finalizacion\": \"2025-02-01T15:00:00Z\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas/1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas",
								"1"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar Tarea No Existente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"Usuario no encontrado\"\n}"
						}
					]
				},
				{
					"name": "Eliminar Tarea No Existente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Code 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Mensaje Correcto\", function() {\r",
									"    var data = pm.response.json()\r",
									"    pm.expect(data.mensaje).to.eql(\"Tarea no encontrada\")\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"texto_area\": \"Tarea actualizada\",\r\n    \"estado\": \"En Proceso\",\r\n    \"fecha_tentativa_finalizacion\": \"2025-02-01T15:00:00Z\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/tareas/10000",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"tareas",
								"10000"
							]
						}
					},
					"response": [
						{
							"name": "Eliminar Tarea No Existente",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"texto_area\": \"Mi primera tarea\",\r\n    \"usuario_id\": 1,\r\n    \"fecha_tentativa_finalizacion\": \"2025-01-31T15:00:00Z\",\r\n    \"categoria_id\": null\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/tareas",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"tareas"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json",
									"description": "",
									"type": "text"
								}
							],
							"cookie": [],
							"body": "{\n    \"mensaje\": \"Usuario no encontrado\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5000"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		}
	]
}